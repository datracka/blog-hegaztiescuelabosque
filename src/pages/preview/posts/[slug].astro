---
import Container from "../../../components/container";
import HeaderBlog from "../../../components/header-blog";
import MoreStories from "../../../components/more-stories";
import PostHeader from "../../../components/post-header";
import PostBody from "../../../components/post-body";
import SectionSeparator from "../../../components/section-separator";
import { metaTagsFragment, responsiveImageFragment } from "../../../lib/fragments";
import Layout from "../../../components/layout";

const { slug } = Astro.params

const graphqlRequest = {
    query: `
      query PostBySlug($slug: String) {
        site: _site {
          favicon: faviconMetaTags {
            ...metaTagsFragment
          }
        }
        post(filter: {slug: {eq: $slug}}) {
          seo: _seoMetaTags {
            ...metaTagsFragment
          }
          title
          slug
          content {
            value
            blocks {
              __typename
              ...on ImageBlockRecord {
                id
                image {
                  responsiveImage(imgixParams: {fm: jpg, fit: crop, w: 2000, h: 1000 }) {
                    ...responsiveImageFragment
                  }
                }
              }
            }
          }
          date
          ogImage: coverImage{
            url(imgixParams: {fm: jpg, fit: crop, w: 2000, h: 1000 })
          }
          coverImage {
            responsiveImage(imgixParams: {fm: jpg, fit: crop, w: 2000, h: 1000 }) {
              ...responsiveImageFragment
            }
          }
          author {
            name
            picture {
              responsiveImage(imgixParams: {fm: jpg, fit: crop, w: 100, h: 100, sat: -100}) {
                ...responsiveImageFragment
              }
            }
          }
        }

        morePosts: allPosts(orderBy: date_DESC, first: 2, filter: {slug: {neq: $slug}}) {
          title
          slug
          excerpt
          date
          coverImage {
            responsiveImage(imgixParams: {fm: jpg, fit: crop, w: 2000, h: 1000 }) {
              ...responsiveImageFragment
            }
          }
          author {
            name
            picture {
              responsiveImage(imgixParams: {fm: jpg, fit: crop, w: 100, h: 100, sat: -100}) {
                ...responsiveImageFragment
              }
            }
          }
        }
      }

      ${responsiveImageFragment}
      ${metaTagsFragment}
    `,
  
    variables: {
      slug
    },
  };

  const response = await fetch(
  'https://graphql.datocms.com/',
  {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Accept': 'application/json',
      'Authorization': `Bearer ${import.meta.env.ASTRO_EXAMPLE_CMS_DATOCMS_API_TOKEN}`,
    },
    body: JSON.stringify(
      graphqlRequest
    ),
  })

  const parsedResponse = await response.json()

  const post = parsedResponse.data.post

  const morePosts = parsedResponse.data.morePosts

export async function getStaticPaths() {
  const slugsResponse = await fetch(
  'https://graphql.datocms.com/preview',
  {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Accept': 'application/json',
      'Authorization': `Bearer ${import.meta.env.ASTRO_EXAMPLE_CMS_DATOCMS_API_TOKEN}`,
    },
    body: JSON.stringify(
      {query: `{allPosts {
    slug
  }}`}
    ),
  }
)
const parsedSlugResponse = await slugsResponse.json()

const pathsArray = []
for(const slug of parsedSlugResponse.data.allPosts){
  pathsArray.push({params: slug})
}
  return pathsArray;
}
---

<Layout preview={true} currentSlug={`/posts/${slug}`}>
  <Container>
    <HeaderBlog preview={true} />
    <article>
      <PostHeader
        title={post.title}
        coverImage={post.coverImage}
        date={post.date}
        author={post.author}
      />
      <PostBody content={post.content} />
    </article>
    <SectionSeparator />
    <MoreStories preview={true} posts={morePosts} />
  </Container>
</Layout>